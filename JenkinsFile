pipeline {
  agent any
  environment{
      VERSION = "${env.BUILD_ID}"
  }

  stages {
    stage('Build') {
      steps {
        sh 'mvn clean package'
      }
    }
    stage('sonar quality check') {
      steps {
        script {
          withSonarQubeEnv('sonarqube') {
            //sh "mvn org.codehaus.mojo:sonar-maven-plugin:2.6:sonar"
            sh "mvn sonar:sonar"
            //sh "mvn sonar:sonar \
            // -Dsonar.projectKey=my-test-project \
            // -Dsonar.host.url=http://3.87.98.247:9000 \
            // -Dsonar.login=0348544a9e997b6d4f56a21190c1cfc9d1c77c55"
          }

          timeout(time: 5, unit: 'HOURS') {
            def qg = waitForQualityGate()
            print "Finished waiting"
            if (qg.status != 'OK') {
              error "Pipeline aborted due to quality gate failure: ${qg.status}"
            }

          }
        }

      }

    }
    
    stage('Docker image build and Push')
    {
        steps
        {
            script
            {
                withCredentials([string(credentialsId: 'nexus_pass', variable: 'nexus_password')]) {
                    sh '''
                    docker build -t 54.164.186.244:8083/my-test-image:${VERSION} .
                    docker login -u admin -p ${nexus_password} http://54.164.186.244:8083/
                    docker push 54.164.186.244:8083/my-test-image:${VERSION}
                    docker rmi 54.164.186.244:8083/my-test-image:${VERSION}
                    '''
                }
            }
           
        }                
    }
   
   
   stage('identify misconfigs in helm charts using datree plugin') {
      steps {
        script {
          dir('kubernetes/') {
            sh 'helm datree test myapp/'
          }
        }
      }

    }    
  }
  
  post {
  failure {
    curl -u admin:admin -X DELETE 'http://54.164.186.244:8083/repository/docker-repo/v2/my-test-image/manifests/${VERSION}'
  }
}

}
